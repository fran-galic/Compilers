; ========== POCETAK PROGRAMA ===========
    MOVE 40000, R7   ; init stog
; ========== START MAIN ===========
  MOVE %D 0, R0
  SUB R7, 4, R7
  STORE R0, (R7)
  LOAD R0, (R7)
  ADD R7, 4, R7
  STORE R0, (V0)
  MOVE %D 0, R0
  SUB R7, 4, R7
  STORE R0, (R7)
  LOAD R0, (R7)
  ADD R7, 4, R7
  STORE R0, (V1)
PETLJA_0
  LOAD R0, (V1)
  SUB R7, 4, R7
  STORE R0, (R7)
  LOAD R0, (V1)
  SUB R7, 4, R7
  STORE R0, (R7)
  LOAD R1, (R7)
  ADD R7, 4, R7
  LOAD R0, (R7)
  ADD R7, 4, R7
  SUB R7, 4, R7
  STORE R0, (R7)
  SUB R7, 4, R7
  STORE R1, (R7)
  CALL MUL
  LOAD R0, (R7)
  ADD R7, 4, R7
  STORE R0, (V2)
  LOAD R0, (V2)
  SUB R7, 4, R7
  STORE R0, (R7)
  LOAD R0, (R7)
  ADD R7, 4, R7
  STORE R0, (V3)
PETLJA_2
  LOAD R0, (V0)
  SUB R7, 4, R7
  STORE R0, (R7)
  LOAD R0, (V3)
  SUB R7, 4, R7
  STORE R0, (R7)
  MOVE %D 2, R0
  SUB R7, 4, R7
  STORE R0, (R7)
  LOAD R1, (R7)
  ADD R7, 4, R7
  LOAD R0, (R7)
  ADD R7, 4, R7
  SUB R7, 4, R7
  STORE R0, (R7)
  SUB R7, 4, R7
  STORE R1, (R7)
  CALL DIV
  LOAD R1, (R7)
  ADD R7, 4, R7
  LOAD R0, (R7)
  ADD R7, 4, R7
  ADD R0, R1, R2
  SUB R7, 4, R7
  STORE R2, (R7)
  LOAD R0, (V2)
  SUB R7, 4, R7
  STORE R0, (R7)
  LOAD R1, (R7)
  ADD R7, 4, R7
  LOAD R0, (R7)
  ADD R7, 4, R7
  ADD R0, R1, R2
  SUB R7, 4, R7
  STORE R2, (R7)
  LOAD R0, (R7)
  ADD R7, 4, R7
  STORE R0, (V0)
  LOAD R0, (V3)
  ADD R0, 1, R0
  STORE R0, (V3)
  LOAD R0, (V2)
  SUB R7, 4, R7
  STORE R0, (R7)
  MOVE %D 2, R0
  SUB R7, 4, R7
  STORE R0, (R7)
  LOAD R1, (R7)
  ADD R7, 4, R7
  LOAD R0, (R7)
  ADD R7, 4, R7
  ADD R0, R1, R2
  SUB R7, 4, R7
  STORE R2, (R7)
  LOAD R1, (R7)
  ADD R7, 4, R7
  LOAD R0, (V3)
  SUB R1, R0, R2
  JP_N END_3
  JP PETLJA_2
END_3
  LOAD R0, (V1)
  ADD R0, 1, R0
  STORE R0, (V1)
  MOVE %D 5, R0
  SUB R7, 4, R7
  STORE R0, (R7)
  LOAD R1, (R7)
  ADD R7, 4, R7
  LOAD R0, (V1)
  SUB R1, R0, R2
  JP_N END_1
  JP PETLJA_0
END_1
  LOAD R6, (V0)
  HALT
; ========== DEKLARACIJA VARIJABLI ===========
V0  DW 0   ; var=rez, scope=0
V1  DW 0   ; var=i, scope=0
V2  DW 0   ; var=k, scope=0
V3  DW 0   ; var=j, scope=0
; ========== POTPROGRAMI ZA MUL, DIV ===========
;----------------------------------
;  potprogram MUL
;----------------------------------
MUL     CALL MD_INIT
        XOR R1, 0, R1
        JP_Z MUL_RET
        SUB R1, 1, R1
MUL_1   ADD R2, R0, R2
        SUB R1, 1, R1
        JP_NN MUL_1
MUL_RET CALL MD_RET
        RET

;----------------------------------
;  potprogram DIV
;----------------------------------
DIV     CALL MD_INIT
        XOR R1, 0, R1
        JP_Z DIV_RET
DIV_1   ADD R2, 1, R2
        SUB R0, R1, R0
        JP_NN DIV_1
        SUB R2, 1, R2
DIV_RET CALL MD_RET
        RET

;----------------------------------
;  potprogrami za M/D
;----------------------------------
MD_SGN  MOVE 0, R6
        XOR R0, 0, R0
        JP_P MD_TST1
        XOR R0, -1, R0
        ADD R0, 1, R0
        MOVE 1, R6
MD_TST1 XOR R1, 0, R1
        JP_P MD_SGNR
        XOR R1, -1, R1
        ADD R1, 1, R1
        XOR R6, 1, R6
MD_SGNR RET

MD_INIT POP R4
        POP R3
        POP R1
        POP R0
        CALL MD_SGN
        MOVE 0, R2
        PUSH R4
        RET

MD_RET  XOR R6, 0, R6
        JP_Z MD_RET1
        XOR R2, -1, R2
        ADD R2, 1, R2
MD_RET1 POP R4
        PUSH R2
        PUSH R3
        PUSH R4
        RET

